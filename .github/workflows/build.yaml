name: Build and Deploy

on:
  push:
    branches:
      - dev
jobs:
  aws_cdk:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gh-actions-role
          aws-region: us-east-1
          mask-aws-account-id: true
      # Connect to ECR AWS
      - name: Connect to ECS
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
      # Create ERC Repository 

      # 
      # PENDDING
      #

      # Create Builder
      - name: Create Builder
        run: |
          docker buildx create --use
      # Build and Push Image
      - name: Build and Push Image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --push -t 176714254348.dkr.ecr.us-east-1.amazonaws.com/aws-thumbnail-service-2:latest -f ./Docker/Dockerfile .
          docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=us-east-1 -e INPUT_BUCKET_NAME=input-images-1 -e OUTPUT_BUCKET_NAME=output-images-2 176714254348.dkr.ecr.us-east-1.amazonaws.com/aws-thumbnail-service-2:latest
      # Describe ECR Images
      - name: Describe ECR Images
        run: |
          aws ecr describe-images --repository-name aws-thumbnail-service-2 --region us-east-1 --image-ids imageDigest=$(aws ecr list-images --repository-name aws-thumbnail-service-2 --region us-east-1 --query 'imageIds[?imageTag==`latest`]' --output json | jq -r '.[0].imageDigest')

