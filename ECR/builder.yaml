AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for the Stori Challenge

Parameters:

  AWSAccessKeyId: # AWS Access Key ID from the AWS account
    Type: String
    Description: Enter AWS Access Key ID
    Default: "EOS..."
  AWSSecretAccessKey: # AWS Secret Access Key from the AWS account
    Type: String
    Description: Enter Secret Access Key
    Default: "ChZ..."
  RegionName: # Region name for the AWS account
    Type: String
    Description: Enter Region name
    Default: "us-east-1"
  InputBucketName: # Static name for the input bucket
    Type: String
    Description: Enter Name of the input bucket
    Default: "aws-thumbnail-input-bucket-1"
  OutputBucketName: # Static name for the output bucket
    Type: String
    Description: Enter Name of the output bucket
    Default: "aws-thumbnail-output-bucket-2"
  GitHubAccessTokenValue: # GitHub access token for the CodePipeline
    Type: String
    Description: Enter GitHub access token (7 days expiration)
    Default: "ghp..."

Resources:

  MyECRRepository: # 1 ECR repository for the Docker image
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${AWS::StackName}-repository
      ImageTagMutability: MUTABLE
      ImageScanningConfiguration:
        ScanOnPush: true

  MyCodeBuildProject: # 2 CodeBuild project for develop the Docker image
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-project
      ServiceRole: !GetAtt MyCodeBuildRole.Arn
      Artifacts:
        Type: no_artifacts   
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Auth:
             Type: OAUTH
        Location: "https://github.com/sys-2077/sys-2077-aws-thumbnail-service-1/tree/main"
        Type: GITHUB
        BuildSpec: buildspec.yaml
      TimeoutInMinutes: 10
      BadgeEnabled: true
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${AWS::StackName}-logs
          StreamName: !Sub ${AWS::StackName}-stream

  MyCodeBuildRole: # 3 IAM role for the CodeBuild project
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess

  InputBucket: # 4 S3 bucket for the input images
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref InputBucketName
      AccessControl: Private
  OutputBucket: # 4 S3 bucket for the output images
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref OutputBucketName
      AccessControl: Private
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-artifacts
      AccessControl: Private

  MyCodePipeline: # 5 CodePipeline for the CI/CD pipeline
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStores:
        - Region: !Ref RegionName
          ArtifactStore: 
            Type: S3
            Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: sys-2077
                Repo: sys-2077-aws-thumbnail-service-1
                Branch: main
                OAuthToken: !Ref GitHubAccessToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref MyCodeBuildProject
              RunOrder: 1

  GitHubAccessToken: # 6 GitHub access token for the CodePipeline
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: GitHubAccessToken
      Type: String
      Value: !Ref GitHubAccessTokenValue

  CodePipelineRole: # 7 IAM role for the CodePipeline
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "CodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

Outputs:

  MyECRRepositoryOutput:
    Description: Name of the ECR repository
    Value: !Ref MyECRRepository
  MyCodeBuildProjectOutput:
    Description: Name of the CodeBuild project
    Value: !Ref MyCodeBuildProject
  MyCodeBuildRoleOutput:
    Description: Name of the IAM role for the CodeBuild project
    Value: !Ref MyCodeBuildRole
  MyCodePipelineOutput:
    Description: Name of the CodePipeline
    Value: !Ref MyCodePipeline
  MyCodePipelineRoleOutput:
    Description: Name of the IAM role for the CodePipeline
    Value: !Ref CodePipelineRole
